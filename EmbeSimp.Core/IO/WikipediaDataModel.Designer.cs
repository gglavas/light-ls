//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WikipediaModel", "FK_Page_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EmbeSimp.Core.IO.Group), "Page", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EmbeSimp.Core.IO.Page), true)]

#endregion

namespace EmbeSimp.Core.IO
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WikipediaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WikipediaEntities object using the connection string found in the 'WikipediaEntities' section of the application configuration file.
        /// </summary>
        public WikipediaEntities() : base("name=WikipediaEntities", "WikipediaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WikipediaEntities object.
        /// </summary>
        public WikipediaEntities(string connectionString) : base(connectionString, "WikipediaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WikipediaEntities object.
        /// </summary>
        public WikipediaEntities(EntityConnection connection) : base(connection, "WikipediaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Page> Pages
        {
            get
            {
                if ((_Pages == null))
                {
                    _Pages = base.CreateObjectSet<Page>("Pages");
                }
                return _Pages;
            }
        }
        private ObjectSet<Page> _Pages;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPages(Page page)
        {
            base.AddObject("Pages", page);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WikipediaModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="groupMark">Initial value of the GroupMark property.</param>
        public static Group CreateGroup(global::System.Int32 groupID, global::System.String groupMark)
        {
            Group group = new Group();
            group.GroupID = groupID;
            group.GroupMark = groupMark;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupMark
        {
            get
            {
                return _GroupMark;
            }
            set
            {
                OnGroupMarkChanging(value);
                ReportPropertyChanging("GroupMark");
                _GroupMark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupMark");
                OnGroupMarkChanged();
            }
        }
        private global::System.String _GroupMark;
        partial void OnGroupMarkChanging(global::System.String value);
        partial void OnGroupMarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WikipediaModel", "FK_Page_Group", "Page")]
        public EntityCollection<Page> Pages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Page>("WikipediaModel.FK_Page_Group", "Page");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Page>("WikipediaModel.FK_Page_Group", "Page", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WikipediaModel", Name="Page")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Page : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Page object.
        /// </summary>
        /// <param name="pageID">Initial value of the PageID property.</param>
        /// <param name="originalID">Initial value of the OriginalID property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="language">Initial value of the Language property.</param>
        public static Page CreatePage(global::System.Int32 pageID, global::System.Int32 originalID, global::System.String uRL, global::System.String title, global::System.String text, global::System.String language)
        {
            Page page = new Page();
            page.PageID = pageID;
            page.OriginalID = originalID;
            page.URL = uRL;
            page.Title = title;
            page.Text = text;
            page.Language = language;
            return page;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageID
        {
            get
            {
                return _PageID;
            }
            set
            {
                if (_PageID != value)
                {
                    OnPageIDChanging(value);
                    ReportPropertyChanging("PageID");
                    _PageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PageID");
                    OnPageIDChanged();
                }
            }
        }
        private global::System.Int32 _PageID;
        partial void OnPageIDChanging(global::System.Int32 value);
        partial void OnPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OriginalID
        {
            get
            {
                return _OriginalID;
            }
            set
            {
                OnOriginalIDChanging(value);
                ReportPropertyChanging("OriginalID");
                _OriginalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalID");
                OnOriginalIDChanged();
            }
        }
        private global::System.Int32 _OriginalID;
        partial void OnOriginalIDChanging(global::System.Int32 value);
        partial void OnOriginalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RedirectTitle
        {
            get
            {
                return _RedirectTitle;
            }
            set
            {
                OnRedirectTitleChanging(value);
                ReportPropertyChanging("RedirectTitle");
                _RedirectTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RedirectTitle");
                OnRedirectTitleChanged();
            }
        }
        private global::System.String _RedirectTitle;
        partial void OnRedirectTitleChanging(global::System.String value);
        partial void OnRedirectTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupID;
        partial void OnGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WikipediaModel", "FK_Page_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("WikipediaModel.FK_Page_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("WikipediaModel.FK_Page_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("WikipediaModel.FK_Page_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("WikipediaModel.FK_Page_Group", "Group", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
